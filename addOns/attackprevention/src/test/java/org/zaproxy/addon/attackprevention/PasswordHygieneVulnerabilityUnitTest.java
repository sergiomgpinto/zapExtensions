package org.zaproxy.addon.attackprevention;

import org.junit.jupiter.api.Test;
import org.zaproxy.addon.attackprevention.utils.JSONLoader;
import org.zaproxy.addon.attackprevention.vulnerability.PasswordHygieneVulnerability;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotEquals;


/**
 * This class incorporates all the unit tests for the
 * phishingAttack class.
 *
 * @see PasswordHygieneVulnerability
 */
class PasswordHygieneVulnerabilityUnitTest {

    private final String PASSED_RULE = JSONLoader.getLabel("PASSED_RULE");

    /**
     * This methods tests the case where a bad/unsafe password is entered
     */
    @Test
    void passwordHygieneBadCasesTest() {

        PasswordHygieneVulnerability attack = new PasswordHygieneVulnerability("1231231232145126161213235690912300012");

        assertNotEquals(PASSED_RULE, attack.evaluateVulnerability());

        PasswordHygieneVulnerability attack2 = new PasswordHygieneVulnerability("password");

        assertNotEquals(PASSED_RULE, attack2.evaluateVulnerability());

        PasswordHygieneVulnerability attack3 = new PasswordHygieneVulnerability("abc");

        assertNotEquals(PASSED_RULE, attack3.evaluateVulnerability());
    }

    /**
     * This methods tests the case where a good/safe password is entered
     */
    @Test
    void passwordHygieneGoodCaseTest() {

        PasswordHygieneVulnerability attack = new PasswordHygieneVulnerability("Masdas123#@@MkLoKKKKamm..==lKoIl");

        assertEquals(PASSED_RULE, attack.evaluateVulnerability());
    }
}